@using System.Net.Http.Headers

@inject HttpClient Client

<div class="container col-6 m-2">
    <h5>@_message</h5>

    <EditForm Model="_model" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="_model.Name"></InputText>
        </div>

        <div class="form-group mt-2">
            <label>Card Images</label>
            <InputFile multiple OnChange="(e) => _files = e.GetMultipleFiles()" class="form-control" accept=".jpg,.jpeg,.png" />
        </div>

        <div class="form-group mt-2">
            <button class="btn btn-lg btn-success" type="submit">Submit</button>
            <button class="btn btn-danger" type="reset">Reset</button>
        </div>
    </EditForm>
</div>

@code{
    [Parameter] public EventCallback<CardCollectionResponse> OnAdd { get; set; }
    private AddCardCollectionRequest _model = new();
    private string _message = "";
    private IReadOnlyCollection<IBrowserFile> _files = new List<IBrowserFile>();

    private async Task Submit()
    {
        if (_files.Count < 1)
        {
            _message = "Enter at least one file";
            return;
        }

        using var content = new MultipartFormDataContent();
        var streams = new List<Stream>();

        try
        {
            foreach (var file in _files)
            {
                var stream = file.OpenReadStream();
                streams.Add(stream);
                var fileContent = new StreamContent(stream);
                fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);
                content.Add(fileContent, "Images", file.Name);
            }

            var response = await Client.PostAsync("cardcollections", content);
        }
        finally
        {
            await Task.WhenAll(streams.Select(s => s.DisposeAsync().AsTask()).ToArray());
        }
    }
}
}