@inject IAction<AddCardCollectionRequest, CardCollectionResponse> Action

<div class="container col-6 m-2">
    <h5>@_message</h5>

    <EditForm Model="_model" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="_model.Name"></InputText>
        </div>

        <div class="form-group mt-2">
            <label>Images Folder Path</label>
            <InputText class="form-control" @bind-Value="_model.FolderPath"></InputText>
        </div>

        <div class="form-group mt-2">
            <button class="btn btn-lg btn-success" type="submit">Submit</button>
            <button class="btn btn-danger" type="reset">Reset</button>
        </div>
    </EditForm>
</div>

@code{
    [Parameter] public EventCallback<CardCollectionResponse> OnAdd { get; set; }
    private AddCardCollectionModel _model = new();
    private string _message = "";

    private async Task Submit()
    {
        string[] extensions = { "jpg", "jpeg", "png" };
        var imageFiles = Directory.GetFiles(_model.FolderPath, "*.*")
            .Where(f => extensions.Any(e => f.ToLower().EndsWith(e)))
            .ToList();

        var request = new AddCardCollectionRequest { Name = _model.Name, FilePaths = imageFiles };
        var response = await Action.Execute(request);
        if (Action.HasErrors)
        {
            _message = Action.ErrorsFormatted;
            return;
        }

        await OnAdd.InvokeAsync(response);
    }
}